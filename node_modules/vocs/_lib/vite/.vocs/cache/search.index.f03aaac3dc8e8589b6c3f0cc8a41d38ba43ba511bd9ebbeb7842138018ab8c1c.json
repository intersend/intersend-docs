"{\"value\":{\"mdx\":\"---\\ntitle: 'Privy Integration'\\ndescription: 'Add your Privy-powered app to Intersend.'\\nlayout: docs\\nshowSidebar: true\\n---\\n\\n# Privy Integration\\n\\n## Prerequisite\\n\\n- Your existing web app is powered by [Privy](https://privy.io) for authentication and embedded wallet management.\\n\\n## Integration Steps\\n\\n### 1. Add Required Files\\n\\nAdd these files to your project:\\n\\n#### intersend-connector.js\\n\\n```ts\\n/**\\n * IntersendProvider class implements a Web3 provider interface for iframe-embedded apps\\n * Handles wallet connection transactions and messaging between parent and child frames\\n */\\nclass IntersendProvider {\\n  constructor() {\\n    // Initialize provider state\\n    this._state = {\\n      accounts: [],\\n      isConnected: false,\\n      chainId: '0x89', // Default to Polygon\\n      lastRequestId: 0\\n    };\\n\\n    // Provider identification flags\\n    this.isMetaMask = false;\\n    this.isIntersend = true;\\n    this.isSafe = true;\\n    this.isPortability = true;\\n\\n    // Allowed domains for security\\n    this.allowedDomains = ['app.intersend.io', 'intersend.io', 'localhost'];\\n\\n    // Event handlers registry\\n    this._eventHandlers = {\\n      accountsChanged: new Set(),\\n      chainChanged: new Set(),\\n      connect: new Set(),\\n      disconnect: new Set()\\n    };\\n\\n    // Initialize only if running in iframe\\n    if (this._isIframe()) {\\n      this._initialize();\\n    }\\n  }\\n\\n  /**\\n   * Check if current context is within an iframe\\n   */\\n  _isIframe() {\\n    return typeof window !== 'undefined' && window !== window.parent;\\n  }\\n\\n  /**\\n   * Validate message origin\\n   */\\n  _isValidOrigin(origin) {\\n    try {\\n      const url = new URL(origin);\\n      return this.allowedDomains.some(domain => url.hostname === domain);\\n    } catch {\\n      return false;\\n    }\\n  }\\n\\n  /**\\n   * Generate unique request ID\\n   */\\n  _generateRequestId() {\\n    this._state.lastRequestId++;\\n    return `intersend_${Date.now()}_${this._state.lastRequestId}`;\\n  }\\n\\n  /**\\n   * Initialize provider and set up message listeners\\n   */\\n  _initialize() {\\n    // Request initial wallet info\\n    this._requestWalletInfo();\\n\\n    // Setup message handler\\n    window.addEventListener('message', this._handleMessage.bind(this));\\n  }\\n\\n  /**\\n   * Handle incoming messages from parent frame\\n   */\\n  _handleMessage(event) {\\n    // Validate message origin\\n    if (!this._isValidOrigin(event.origin)) {\\n      console.warn('Message received from unauthorized origin:', event.origin);\\n      return;\\n    }\\n\\n    const { type, payload, id, error } = event.data || {};\\n\\n    switch (type) {\\n      case 'WALLET_INFO':\\n        this._handleWalletInfo(payload);\\n        break;\\n      case 'CHAIN_CHANGED':\\n        this._handleChainChanged(payload);\\n        break;\\n      case 'ACCOUNTS_CHANGED':\\n        this._handleAccountsChanged(payload);\\n        break;\\n      case 'DISCONNECT':\\n        this._handleDisconnect();\\n        break;\\n      // Add other message type handlers as needed\\n    }\\n  }\\n\\n  /**\\n   * Handle wallet info updates\\n   */\\n  _handleWalletInfo(payload) {\\n    if (!payload?.address) return;\\n\\n    const prevChainId = this._state.chainId;\\n    const prevAccounts = this._state.accounts;\\n\\n    this._state.accounts = [payload.address];\\n    this._state.isConnected = true;\\n    this._state.chainId = payload.chainId || this._state.chainId;\\n\\n    // Emit relevant events\\n    if (prevChainId !== this._state.chainId) {\\n      this._emit('chainChanged', this._state.chainId);\\n    }\\n\\n    if (prevAccounts[0] !== payload.address) {\\n      this._emit('accountsChanged', this._state.accounts);\\n    }\\n\\n    if (!prevAccounts.length) {\\n      this._emit('connect', { chainId: this._state.chainId });\\n    }\\n  }\\n\\n  /**\\n   * Request wallet information from parent frame\\n   */\\n  _requestWalletInfo() {\\n    window.parent.postMessage({\\n      type: 'REQUEST_WALLET_INFO',\\n      id: this._generateRequestId()\\n    }, '*');\\n  }\\n\\n   /**\\n   * Handle provider requests\\n   */\\n   async request({ method, params }) {\\n    if (!this._isIframe()) {\\n      throw new Error('IntersendProvider is only available within iframes');\\n    }\\n\\n    console.debug('Provider request:', method, params);\\n\\n    switch (method) {\\n      case 'eth_requestAccounts':\\n        return this._handleAccountsRequest();\\n\\n      case 'eth_accounts':\\n        return Promise.resolve(this._state.accounts);\\n\\n      case 'eth_chainId':\\n        return Promise.resolve(this._state.chainId);\\n\\n      case 'wallet_switchEthereumChain':\\n        return this._handleChainSwitch(params);\\n\\n      case 'personal_sign':\\n      case 'eth_sign':\\n      case 'eth_signTypedData':\\n      case 'eth_signTypedData_v4':\\n        return this._handleSigningRequest(method, params);\\n\\n      default:\\n        return this._handleRpcRequest(method, params);\\n    }\\n  }\\n\\n  /**\\n   * Handle account connection request\\n   */\\n  async _handleAccountsRequest() {\\n    if (this._state.accounts.length > 0) {\\n      return this._state.accounts;\\n    }\\n\\n    return new Promise((resolve, reject) => {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() => {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error('Account request timeout'));\\n      }, 30000);\\n\\n      this._setupMessageHandler(requestId, (response) => {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else if (response.payload?.address) {\\n          this._handleWalletInfo(response.payload);\\n          resolve(this._state.accounts);\\n        }\\n      });\\n\\n      window.parent.postMessage({\\n        type: 'REQUEST_WALLET_INFO',\\n        id: requestId\\n      }, '*');\\n    });\\n  }\\n\\n  /**\\n   * Handle chain switching request\\n   */\\n  async _handleChainSwitch(params) {\\n    return new Promise((resolve, reject) => {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() => {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error('Chain switch timeout'));\\n      }, 30000);\\n\\n      this._setupMessageHandler(requestId, (response) => {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(null);\\n        }\\n      });\\n\\n      window.parent.postMessage({\\n        type: 'SWITCH_CHAIN',\\n        payload: { chainId: params[0].chainId },\\n        id: requestId\\n      }, '*');\\n    });\\n  }\\n\\n  /**\\n   * Handle signing requests\\n   */\\n  async _handleSigningRequest(method, params) {\\n    return new Promise((resolve, reject) => {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() => {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error('Signing request timeout'));\\n      }, 300000); // 5 minutes timeout for signing\\n\\n      this._setupMessageHandler(requestId, (response) => {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(response.payload.signature);\\n        }\\n      });\\n\\n      window.parent.postMessage({\\n        type: 'SIGNATURE_REQUEST',\\n        payload: {\\n          method,\\n          params,\\n          address: this._state.accounts[0]\\n        },\\n        id: requestId\\n      }, '*');\\n    });\\n  }\\n\\n  /**\\n   * Handle general RPC requests\\n   */\\n  async _handleRpcRequest(method, params) {\\n    return new Promise((resolve, reject) => {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() => {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error('RPC request timeout'));\\n      }, 30000);\\n\\n      this._setupMessageHandler(requestId, (response) => {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(response.payload);\\n        }\\n      });\\n\\n      window.parent.postMessage({\\n        type: 'RPC_REQUEST',\\n        payload: {\\n          method,\\n          params,\\n          address: this._state.accounts[0]\\n        },\\n        id: requestId\\n      }, '*');\\n    });\\n  }\\n\\n  /**\\n   * Set up message handler for a specific request\\n   */\\n  _setupMessageHandler(requestId, callback) {\\n    const handler = (event) => {\\n      if (!this._isValidOrigin(event.origin)) return;\\n\\n      const { id, type, payload, error } = event.data || {};\\n      if (id === requestId) {\\n        callback({ type, payload, error });\\n        this._removeMessageHandler(requestId);\\n      }\\n    };\\n\\n    window.addEventListener('message', handler);\\n    this._messageHandlers = this._messageHandlers || new Map();\\n    this._messageHandlers.set(requestId, handler);\\n  }\\n\\n  /**\\n   * Remove message handler\\n   */\\n  _removeMessageHandler(requestId) {\\n    if (this._messageHandlers?.has(requestId)) {\\n      window.removeEventListener('message', this._messageHandlers.get(requestId));\\n      this._messageHandlers.delete(requestId);\\n    }\\n  }\\n\\n  /**\\n   * Event subscription methods\\n   */\\n  on(event, handler) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].add(handler);\\n    }\\n  }\\n\\n  removeListener(event, handler) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].delete(handler);\\n    }\\n  }\\n\\n  _emit(event, data) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].forEach(handler => handler(data));\\n    }\\n  }\\n}\\n\\n/**\\n * EIP-6963 provider info\\n */\\nconst PROVIDER_INFO = {\\n  uuid: 'intersend-provider-v1',\\n  name: 'Intersend',\\n  icon: 'data:image/svg+xml;base64...', // Add your base64 encoded icon\\n  rdns: 'com.intersend'\\n};\\n\\n/**\\n * Announce provider according to EIP-6963\\n */\\nfunction announceProvider() {\\n  // Only announce if in iframe\\n  if (typeof window === 'undefined' || window === window.parent) {\\n    return;\\n  }\\n\\n  const announcement = {\\n    provider,\\n    info: PROVIDER_INFO\\n  };\\n\\n  // Announce immediately\\n  window.dispatchEvent(\\n    new CustomEvent('eip6963:announceProvider', {\\n      detail: announcement\\n    })\\n  );\\n\\n  // Listen for future requests\\n  window.addEventListener('eip6963:requestProvider', () => {\\n    window.dispatchEvent(\\n      new CustomEvent('eip6963:announceProvider', {\\n        detail: announcement\\n      })\\n    );\\n  });\\n}\\n\\n// Create provider instance\\nconst provider = new IntersendProvider();\\n\\n// Inject provider and announce\\nif (typeof window !== 'undefined') {\\n  // Only inject if in iframe\\n  if (window !== window.parent) {\\n    Object.defineProperty(window, 'ethereum', {\\n      value: provider,\\n      writable: true,\\n      configurable: true,\\n      enumerable: true\\n    });\\n\\n    announceProvider();\\n  }\\n}\\n\\nexport { provider, announceProvider };\\n```\\n\\n#### useIntersendAutoConnect.js\\n\\n```ts\\n// useIntersendAutoConnect.js\\nimport { useEffect, useState, useCallback } from 'react';\\nimport { useWallets, usePrivy } from '@privy-io/react-auth';\\n\\n/**\\n * Hook for handling Intersend wallet auto-connection\\n */\\nfunction useIntersendAutoConnect() {\\n  const { wallets, ready } = useWallets();\\n  const [isConnecting, setIsConnecting] = useState(false);\\n  const [error, setError] = useState(null);\\n\\n  const connectWallet = useCallback(async (address) => {\\n    const wallet = wallets.find(\\n      (w) => w.address?.toLowerCase() === address.toLowerCase()\\n    );\\n\\n    if (wallet) {\\n      try {\\n        await wallet.loginOrLink();\\n        return true;\\n      } catch (err) {\\n        console.error('Wallet login/link error:', err);\\n        throw err;\\n      }\\n    }\\n    return false;\\n  }, [wallets]);\\n\\n  useEffect(() => {\\n    if (!ready || isConnecting || !window.ethereum?._state?.accounts?.length) {\\n      return;\\n    }\\n\\n    const autoConnect = async () => {\\n      try {\\n        setIsConnecting(true);\\n        setError(null);\\n\\n        const address = window.ethereum._state.accounts[0];\\n        const connected = await connectWallet(address);\\n\\n        if (!connected) {\\n          console.log('No matching wallet found for address:', address);\\n        }\\n      } catch (err) {\\n        console.error('Auto-connect error:', err);\\n        setError(err);\\n      } finally {\\n        setIsConnecting(false);\\n      }\\n    };\\n\\n    autoConnect();\\n  }, [ready, wallets, isConnecting, connectWallet]);\\n\\n  return { isConnecting, error };\\n}\\n\\n/**\\n * Component that handles auto-connection of Intersend wallet\\n * Usage: Just include this component in your app's provider wrapper\\n * <AutoConnectHandler />\\n */\\nexport function AutoConnectHandler() {\\n  const { isConnecting, error } = useIntersendAutoConnect();\\n\\n  useEffect(() => {\\n    if (error) {\\n      console.error('Auto-connect error:', error);\\n      // You can add additional error handling here like showing a toast notification\\n      // toast.error('Failed to auto-connect wallet');\\n    }\\n  }, [error]);\\n\\n  // Component doesn't render anything\\n  return null;\\n}\\n\\n// Export both the hook and the component\\nexport { useIntersendAutoConnect };\\n\\n// Default export is the component for easier imports\\nexport default AutoConnectHandler;\\n```\\n\\n### 2. Configure Providers\\n\\nImport and set up the connector and auto-connect handler in your app's provider configuration:\\n\\n```tsx\\nimport './intersend-connector'\\nimport { AutoConnectHandler } from './hooks/useIntersendAutoConnect'\\n\\nexport default function Providers({ children }) {\\n  return (\\n    <PrivyProvider appId={privyAppId} config={...}>\\n      <WagmiProvider config={wagmiConfig}>\\n        {/* AutoConnectHandler manages wallet connection when app is loaded in Intersend */}\\n        <AutoConnectHandler />\\n        {children}\\n      </WagmiProvider>\\n    </PrivyProvider>\\n  );\\n}\\n```\\n\\n### 3. Whitelist Intersend Domain\\n\\nAdd Intersend domains to your Privy dashboard's allowed origins:\\n- https://app.intersend.io\\n- https://intersend.io\\n\\n[Configure Allowed Origins →](https://docs.privy.io/guide/react/configuration/allowed-domains)\\n\\n### 4. Verify App Behavior Inside Intersend\\n\\n1. **Open [Sandbox](https://app.intersend.io/apps/sandbox)** and paste your web app's URL into the address bar of the Intersend browser.\\n2. **Auto-connect** should kick in; Intersend will inject the user's wallet data into your app.\\n3. **Test transaction or signing flows** to confirm everything relays properly.\\n\\n### 5. Get Listed\\n\\nOnce integrated submit your app for review:\\n- Email: hello@intersend.io\\n- Telegram: @erturkarda\\n\\n## Need Help?\\n\\n- [Contact Intersend Support](mailto:hello@intersend.io)\\n\",\"document\":[{\"href\":\"/apps/privy#privy-integration\",\"html\":\"</header>\\n\",\"id\":\"docs/pages/apps/privy.mdx#privy-integration\",\"isPage\":true,\"text\":\"\\n\",\"title\":\"Privy Integration\",\"titles\":[]},{\"href\":\"/apps/privy#prerequisite\",\"html\":\"\\n<ul>\\n<li>Your existing web app is powered by <a href=\\\"https://privy.io\\\">Privy</a> for authentication and embedded wallet management.</li>\\n</ul>\\n\",\"id\":\"docs/pages/apps/privy.mdx#prerequisite\",\"isPage\":false,\"text\":\"\\n\\nYour existing web app is powered by Privy for authentication and embedded wallet management.\\n\\n\",\"title\":\"Prerequisite\",\"titles\":[\"Privy Integration\"]},{\"href\":\"/apps/privy#integration-steps\",\"html\":\"\\n\",\"id\":\"docs/pages/apps/privy.mdx#integration-steps\",\"isPage\":false,\"text\":\"\\n\",\"title\":\"Integration Steps\",\"titles\":[\"Privy Integration\"]},{\"href\":\"/apps/privy#1-add-required-files\",\"html\":\"\\n<p>Add these files to your project:</p>\\n\",\"id\":\"docs/pages/apps/privy.mdx#1-add-required-files\",\"isPage\":false,\"text\":\"\\nAdd these files to your project:\\n\",\"title\":\"1. Add Required Files\",\"titles\":[\"Privy Integration\",\"Integration Steps\"]},{\"href\":\"/apps/privy#intersend-connectorjs\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * IntersendProvider class implements a Web3 provider interface for iframe-embedded apps</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * Handles wallet connection transactions and messaging between parent and child frames</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">class</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> IntersendProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  constructor</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Initialize provider state</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      accounts: [],</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      isConnected: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      chainId: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;0x89&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Default to Polygon</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      lastRequestId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Provider identification flags</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.isMetaMask </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.isIntersend </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.isSafe </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.isPortability </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Allowed domains for security</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.allowedDomains </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;app.intersend.io&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;intersend.io&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;localhost&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">];</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Event handlers registry</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      accountsChanged: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      chainChanged: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      connect: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(),</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      disconnect: </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Initialize only if running in iframe</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_isIframe</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_initialize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Check if current context is within an iframe</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _isIframe</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> typeof</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;undefined&#x27;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> &amp;&amp;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.parent;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Validate message origin</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _isValidOrigin</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">origin</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> url</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> URL</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(origin);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.allowedDomains.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">some</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">domain</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> url.hostname </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> domain);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Generate unique request ID</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.lastRequestId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">++</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> `intersend_${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">Date</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">now</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">()</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}_${</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">_state</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">lastRequestId</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Initialize provider and set up message listeners</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _initialize</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Request initial wallet info</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_requestWalletInfo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Setup message handler</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">addEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;message&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._handleMessage.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">bind</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle incoming messages from parent frame</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _handleMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Validate message origin</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_isValidOrigin</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(event.origin)) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">warn</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Message received from unauthorized origin:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, event.origin);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">payload</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">id</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> event.data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {};</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    switch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (type) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;WALLET_INFO&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleWalletInfo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(payload);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;CHAIN_CHANGED&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleChainChanged</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(payload);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;ACCOUNTS_CHANGED&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleAccountsChanged</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(payload);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;DISCONNECT&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleDisconnect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // Add other message type handlers as needed</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle wallet info updates</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _handleWalletInfo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">payload</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">payload?.address) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> prevChainId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> prevAccounts</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [payload.address];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.isConnected </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> payload.chainId </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">    // Emit relevant events</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (prevChainId </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_emit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;chainChanged&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (prevAccounts[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> payload.address) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_emit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;accountsChanged&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">prevAccounts.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">length</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_emit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;connect&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, { chainId: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Request wallet information from parent frame</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _requestWalletInfo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    window.parent.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">postMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;REQUEST_WALLET_INFO&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      id: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;*&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle provider requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">   async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> request</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">method</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">params</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_isIframe</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      throw</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;IntersendProvider is only available within iframes&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">debug</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Provider request:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, method, params);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    switch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (method) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_requestAccounts&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleAccountsRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_accounts&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_chainId&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.chainId);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;wallet_switchEthereumChain&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleChainSwitch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(params);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;personal_sign&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_sign&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_signTypedData&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;eth_signTypedData_v4&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleSigningRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(method, params);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      default</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleRpcRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(method, params);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle account connection request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> _handleAccountsRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">length</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> &gt;</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> 0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> requestId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Account request timeout&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_setupMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId, (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        clearTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(timeout);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (response.error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.error));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (response.payload?.address) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">          this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_handleWalletInfo</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.payload);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      window.parent.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">postMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;REQUEST_WALLET_INFO&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        id: requestId</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;*&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle chain switching request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> _handleChainSwitch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">params</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> requestId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Chain switch timeout&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_setupMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId, (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        clearTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(timeout);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (response.error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.error));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">null</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      window.parent.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">postMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;SWITCH_CHAIN&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        payload: { chainId: params[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">].chainId },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        id: requestId</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;*&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle signing requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> _handleSigningRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">method</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">params</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> requestId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Signing request timeout&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">300000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">); </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// 5 minutes timeout for signing</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_setupMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId, (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        clearTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(timeout);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (response.error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.error));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.payload.signature);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      window.parent.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">postMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;SIGNATURE_REQUEST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        payload: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          method,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          params,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          address: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        id: requestId</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;*&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Handle general RPC requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  async</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> _handleRpcRequest</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">method</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">params</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> Promise</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">((</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> requestId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_generateRequestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> timeout</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> setTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;RPC request timeout&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">30000</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_setupMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId, (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">response</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        clearTimeout</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(timeout);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (response.error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          reject</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.error));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">else</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">          resolve</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(response.payload);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      window.parent.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">postMessage</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;RPC_REQUEST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        payload: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          method,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          params,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          address: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._state.accounts[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">]</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        },</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        id: requestId</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;*&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Set up message handler for a specific request</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _setupMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">requestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">callback</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> handler</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_isValidOrigin</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(event.origin)) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">id</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">payload</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> event.data </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {};</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (id </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> requestId) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        callback</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ type, payload, error });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">        this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">_removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">addEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;message&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, handler);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Map</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">    this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">set</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId, handler);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Remove message handler</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _removeMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">requestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers?.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">has</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId)) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">removeEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;message&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">get</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._messageHandlers.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">delete</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(requestId);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  /**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   * Event subscription methods</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">   */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  on</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">handler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event].</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">add</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(handler);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  removeListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">handler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event].</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">delete</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(handler);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  _emit</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">data</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event]) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">      this</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">._eventHandlers[event].</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">forEach</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">handler</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> handler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(data));</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * EIP-6963 provider info</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> PROVIDER_INFO</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  uuid: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;intersend-provider-v1&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  name: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Intersend&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  icon: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;data:image/svg+xml;base64...&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Add your base64 encoded icon</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  rdns: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;com.intersend&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">};</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * Announce provider according to EIP-6963</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> announceProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Only announce if in iframe</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">typeof</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;undefined&#x27;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> ||</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.parent) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> announcement</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    provider,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    info: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">PROVIDER_INFO</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Announce immediately</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">dispatchEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> CustomEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eip6963:announceProvider&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      detail: announcement</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  );</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Listen for future requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">addEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eip6963:requestProvider&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, () </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">dispatchEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> CustomEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;eip6963:announceProvider&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        detail: announcement</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      })</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Create provider instance</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> provider</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> new</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> IntersendProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Inject provider and announce</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">typeof</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;undefined&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Only inject if in iframe</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (window </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!==</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.parent) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    Object.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">defineProperty</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(window, </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;ethereum&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      value: provider,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      writable: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      configurable: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      enumerable: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    announceProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { provider, announceProvider };</span></span></code></pre>\\n\",\"id\":\"docs/pages/apps/privy.mdx#intersend-connectorjs\",\"isPage\":false,\"text\":\"\\n/**\\n * IntersendProvider class implements a Web3 provider interface for iframe-embedded apps\\n * Handles wallet connection transactions and messaging between parent and child frames\\n */\\nclass IntersendProvider {\\n  constructor() {\\n    // Initialize provider state\\n    this._state = {\\n      accounts: [],\\n      isConnected: false,\\n      chainId: &#x27;0x89&#x27;, // Default to Polygon\\n      lastRequestId: 0\\n    };\\n \\n    // Provider identification flags\\n    this.isMetaMask = false;\\n    this.isIntersend = true;\\n    this.isSafe = true;\\n    this.isPortability = true;\\n \\n    // Allowed domains for security\\n    this.allowedDomains = [&#x27;app.intersend.io&#x27;, &#x27;intersend.io&#x27;, &#x27;localhost&#x27;];\\n \\n    // Event handlers registry\\n    this._eventHandlers = {\\n      accountsChanged: new Set(),\\n      chainChanged: new Set(),\\n      connect: new Set(),\\n      disconnect: new Set()\\n    };\\n \\n    // Initialize only if running in iframe\\n    if (this._isIframe()) {\\n      this._initialize();\\n    }\\n  }\\n \\n  /**\\n   * Check if current context is within an iframe\\n   */\\n  _isIframe() {\\n    return typeof window !== &#x27;undefined&#x27; &amp;&amp; window !== window.parent;\\n  }\\n \\n  /**\\n   * Validate message origin\\n   */\\n  _isValidOrigin(origin) {\\n    try {\\n      const url = new URL(origin);\\n      return this.allowedDomains.some(domain =&gt; url.hostname === domain);\\n    } catch {\\n      return false;\\n    }\\n  }\\n \\n  /**\\n   * Generate unique request ID\\n   */\\n  _generateRequestId() {\\n    this._state.lastRequestId++;\\n    return `intersend_${Date.now()}_${this._state.lastRequestId}`;\\n  }\\n \\n  /**\\n   * Initialize provider and set up message listeners\\n   */\\n  _initialize() {\\n    // Request initial wallet info\\n    this._requestWalletInfo();\\n \\n    // Setup message handler\\n    window.addEventListener(&#x27;message&#x27;, this._handleMessage.bind(this));\\n  }\\n \\n  /**\\n   * Handle incoming messages from parent frame\\n   */\\n  _handleMessage(event) {\\n    // Validate message origin\\n    if (!this._isValidOrigin(event.origin)) {\\n      console.warn(&#x27;Message received from unauthorized origin:&#x27;, event.origin);\\n      return;\\n    }\\n \\n    const { type, payload, id, error } = event.data || {};\\n \\n    switch (type) {\\n      case &#x27;WALLET_INFO&#x27;:\\n        this._handleWalletInfo(payload);\\n        break;\\n      case &#x27;CHAIN_CHANGED&#x27;:\\n        this._handleChainChanged(payload);\\n        break;\\n      case &#x27;ACCOUNTS_CHANGED&#x27;:\\n        this._handleAccountsChanged(payload);\\n        break;\\n      case &#x27;DISCONNECT&#x27;:\\n        this._handleDisconnect();\\n        break;\\n      // Add other message type handlers as needed\\n    }\\n  }\\n \\n  /**\\n   * Handle wallet info updates\\n   */\\n  _handleWalletInfo(payload) {\\n    if (!payload?.address) return;\\n \\n    const prevChainId = this._state.chainId;\\n    const prevAccounts = this._state.accounts;\\n \\n    this._state.accounts = [payload.address];\\n    this._state.isConnected = true;\\n    this._state.chainId = payload.chainId || this._state.chainId;\\n \\n    // Emit relevant events\\n    if (prevChainId !== this._state.chainId) {\\n      this._emit(&#x27;chainChanged&#x27;, this._state.chainId);\\n    }\\n \\n    if (prevAccounts[0] !== payload.address) {\\n      this._emit(&#x27;accountsChanged&#x27;, this._state.accounts);\\n    }\\n \\n    if (!prevAccounts.length) {\\n      this._emit(&#x27;connect&#x27;, { chainId: this._state.chainId });\\n    }\\n  }\\n \\n  /**\\n   * Request wallet information from parent frame\\n   */\\n  _requestWalletInfo() {\\n    window.parent.postMessage({\\n      type: &#x27;REQUEST_WALLET_INFO&#x27;,\\n      id: this._generateRequestId()\\n    }, &#x27;*&#x27;);\\n  }\\n \\n   /**\\n   * Handle provider requests\\n   */\\n   async request({ method, params }) {\\n    if (!this._isIframe()) {\\n      throw new Error(&#x27;IntersendProvider is only available within iframes&#x27;);\\n    }\\n \\n    console.debug(&#x27;Provider request:&#x27;, method, params);\\n \\n    switch (method) {\\n      case &#x27;eth_requestAccounts&#x27;:\\n        return this._handleAccountsRequest();\\n \\n      case &#x27;eth_accounts&#x27;:\\n        return Promise.resolve(this._state.accounts);\\n \\n      case &#x27;eth_chainId&#x27;:\\n        return Promise.resolve(this._state.chainId);\\n \\n      case &#x27;wallet_switchEthereumChain&#x27;:\\n        return this._handleChainSwitch(params);\\n \\n      case &#x27;personal_sign&#x27;:\\n      case &#x27;eth_sign&#x27;:\\n      case &#x27;eth_signTypedData&#x27;:\\n      case &#x27;eth_signTypedData_v4&#x27;:\\n        return this._handleSigningRequest(method, params);\\n \\n      default:\\n        return this._handleRpcRequest(method, params);\\n    }\\n  }\\n \\n  /**\\n   * Handle account connection request\\n   */\\n  async _handleAccountsRequest() {\\n    if (this._state.accounts.length &gt; 0) {\\n      return this._state.accounts;\\n    }\\n \\n    return new Promise((resolve, reject) =&gt; {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() =&gt; {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error(&#x27;Account request timeout&#x27;));\\n      }, 30000);\\n \\n      this._setupMessageHandler(requestId, (response) =&gt; {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else if (response.payload?.address) {\\n          this._handleWalletInfo(response.payload);\\n          resolve(this._state.accounts);\\n        }\\n      });\\n \\n      window.parent.postMessage({\\n        type: &#x27;REQUEST_WALLET_INFO&#x27;,\\n        id: requestId\\n      }, &#x27;*&#x27;);\\n    });\\n  }\\n \\n  /**\\n   * Handle chain switching request\\n   */\\n  async _handleChainSwitch(params) {\\n    return new Promise((resolve, reject) =&gt; {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() =&gt; {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error(&#x27;Chain switch timeout&#x27;));\\n      }, 30000);\\n \\n      this._setupMessageHandler(requestId, (response) =&gt; {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(null);\\n        }\\n      });\\n \\n      window.parent.postMessage({\\n        type: &#x27;SWITCH_CHAIN&#x27;,\\n        payload: { chainId: params[0].chainId },\\n        id: requestId\\n      }, &#x27;*&#x27;);\\n    });\\n  }\\n \\n  /**\\n   * Handle signing requests\\n   */\\n  async _handleSigningRequest(method, params) {\\n    return new Promise((resolve, reject) =&gt; {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() =&gt; {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error(&#x27;Signing request timeout&#x27;));\\n      }, 300000); // 5 minutes timeout for signing\\n \\n      this._setupMessageHandler(requestId, (response) =&gt; {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(response.payload.signature);\\n        }\\n      });\\n \\n      window.parent.postMessage({\\n        type: &#x27;SIGNATURE_REQUEST&#x27;,\\n        payload: {\\n          method,\\n          params,\\n          address: this._state.accounts[0]\\n        },\\n        id: requestId\\n      }, &#x27;*&#x27;);\\n    });\\n  }\\n \\n  /**\\n   * Handle general RPC requests\\n   */\\n  async _handleRpcRequest(method, params) {\\n    return new Promise((resolve, reject) =&gt; {\\n      const requestId = this._generateRequestId();\\n      const timeout = setTimeout(() =&gt; {\\n        this._removeMessageHandler(requestId);\\n        reject(new Error(&#x27;RPC request timeout&#x27;));\\n      }, 30000);\\n \\n      this._setupMessageHandler(requestId, (response) =&gt; {\\n        clearTimeout(timeout);\\n        if (response.error) {\\n          reject(new Error(response.error));\\n        } else {\\n          resolve(response.payload);\\n        }\\n      });\\n \\n      window.parent.postMessage({\\n        type: &#x27;RPC_REQUEST&#x27;,\\n        payload: {\\n          method,\\n          params,\\n          address: this._state.accounts[0]\\n        },\\n        id: requestId\\n      }, &#x27;*&#x27;);\\n    });\\n  }\\n \\n  /**\\n   * Set up message handler for a specific request\\n   */\\n  _setupMessageHandler(requestId, callback) {\\n    const handler = (event) =&gt; {\\n      if (!this._isValidOrigin(event.origin)) return;\\n \\n      const { id, type, payload, error } = event.data || {};\\n      if (id === requestId) {\\n        callback({ type, payload, error });\\n        this._removeMessageHandler(requestId);\\n      }\\n    };\\n \\n    window.addEventListener(&#x27;message&#x27;, handler);\\n    this._messageHandlers = this._messageHandlers || new Map();\\n    this._messageHandlers.set(requestId, handler);\\n  }\\n \\n  /**\\n   * Remove message handler\\n   */\\n  _removeMessageHandler(requestId) {\\n    if (this._messageHandlers?.has(requestId)) {\\n      window.removeEventListener(&#x27;message&#x27;, this._messageHandlers.get(requestId));\\n      this._messageHandlers.delete(requestId);\\n    }\\n  }\\n \\n  /**\\n   * Event subscription methods\\n   */\\n  on(event, handler) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].add(handler);\\n    }\\n  }\\n \\n  removeListener(event, handler) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].delete(handler);\\n    }\\n  }\\n \\n  _emit(event, data) {\\n    if (this._eventHandlers[event]) {\\n      this._eventHandlers[event].forEach(handler =&gt; handler(data));\\n    }\\n  }\\n}\\n \\n/**\\n * EIP-6963 provider info\\n */\\nconst PROVIDER_INFO = {\\n  uuid: &#x27;intersend-provider-v1&#x27;,\\n  name: &#x27;Intersend&#x27;,\\n  icon: &#x27;data:image/svg+xml;base64...&#x27;, // Add your base64 encoded icon\\n  rdns: &#x27;com.intersend&#x27;\\n};\\n \\n/**\\n * Announce provider according to EIP-6963\\n */\\nfunction announceProvider() {\\n  // Only announce if in iframe\\n  if (typeof window === &#x27;undefined&#x27; || window === window.parent) {\\n    return;\\n  }\\n \\n  const announcement = {\\n    provider,\\n    info: PROVIDER_INFO\\n  };\\n \\n  // Announce immediately\\n  window.dispatchEvent(\\n    new CustomEvent(&#x27;eip6963:announceProvider&#x27;, {\\n      detail: announcement\\n    })\\n  );\\n \\n  // Listen for future requests\\n  window.addEventListener(&#x27;eip6963:requestProvider&#x27;, () =&gt; {\\n    window.dispatchEvent(\\n      new CustomEvent(&#x27;eip6963:announceProvider&#x27;, {\\n        detail: announcement\\n      })\\n    );\\n  });\\n}\\n \\n// Create provider instance\\nconst provider = new IntersendProvider();\\n \\n// Inject provider and announce\\nif (typeof window !== &#x27;undefined&#x27;) {\\n  // Only inject if in iframe\\n  if (window !== window.parent) {\\n    Object.defineProperty(window, &#x27;ethereum&#x27;, {\\n      value: provider,\\n      writable: true,\\n      configurable: true,\\n      enumerable: true\\n    });\\n \\n    announceProvider();\\n  }\\n}\\n \\nexport { provider, announceProvider };\\n\",\"title\":\"intersend-connector.js\",\"titles\":[\"Privy Integration\",\"Integration Steps\",\"1. Add Required Files\"]},{\"href\":\"/apps/privy#useintersendautoconnectjs\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// useIntersendAutoConnect.js</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useEffect, useState, useCallback } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;react&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useWallets, usePrivy } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@privy-io/react-auth&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * Hook for handling Intersend wallet auto-connection</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useIntersendAutoConnect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">wallets</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">ready</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useWallets</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">isConnecting</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">setIsConnecting</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useState</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> [</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">setError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">] </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useState</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">null</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> connectWallet</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useCallback</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">async</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> wallet</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wallets.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">find</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">w</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> w.address?.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">toLowerCase</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">===</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> address.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">toLowerCase</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">()</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    );</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (wallet) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        await</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> wallet.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">loginOrLink</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (err) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Wallet login/link error:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, err);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        throw</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> err;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, [wallets]);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  useEffect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">ready </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> isConnecting </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">||</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> !</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">window.ethereum?._state?.accounts?.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">length</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> autoConnect</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> async</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> () </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        setIsConnecting</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        setError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">null</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> address</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.ethereum._state.accounts[</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">0</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">];</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> connected</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> await</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> connectWallet</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(address);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">connected) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">log</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;No matching wallet found for address:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, address);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (err) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Auto-connect error:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, err);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        setError</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(err);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">finally</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">        setIsConnecting</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">false</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">    autoConnect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, [ready, wallets, isConnecting, connectWallet]);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { isConnecting, error };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/**</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * Component that handles auto-connection of Intersend wallet</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * Usage: Just include this component in your app&#x27;s provider wrapper</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> * &lt;AutoConnectHandler /&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\"> */</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AutoConnectHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">isConnecting</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useIntersendAutoConnect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  useEffect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    if</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (error) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      console.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">error</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;Auto-connect error:&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, error);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // You can add additional error handling here like showing a toast notification</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">      // toast.error(&#x27;Failed to auto-connect wallet&#x27;);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, [error]);</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // Component doesn&#x27;t render anything</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> null</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Export both the hook and the component</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useIntersendAutoConnect };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// Default export is the component for easier imports</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> default</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> AutoConnectHandler;</span></span></code></pre>\\n\",\"id\":\"docs/pages/apps/privy.mdx#useintersendautoconnectjs\",\"isPage\":false,\"text\":\"\\n// useIntersendAutoConnect.js\\nimport { useEffect, useState, useCallback } from &#x27;react&#x27;;\\nimport { useWallets, usePrivy } from &#x27;@privy-io/react-auth&#x27;;\\n \\n/**\\n * Hook for handling Intersend wallet auto-connection\\n */\\nfunction useIntersendAutoConnect() {\\n  const { wallets, ready } = useWallets();\\n  const [isConnecting, setIsConnecting] = useState(false);\\n  const [error, setError] = useState(null);\\n \\n  const connectWallet = useCallback(async (address) =&gt; {\\n    const wallet = wallets.find(\\n      (w) =&gt; w.address?.toLowerCase() === address.toLowerCase()\\n    );\\n \\n    if (wallet) {\\n      try {\\n        await wallet.loginOrLink();\\n        return true;\\n      } catch (err) {\\n        console.error(&#x27;Wallet login/link error:&#x27;, err);\\n        throw err;\\n      }\\n    }\\n    return false;\\n  }, [wallets]);\\n \\n  useEffect(() =&gt; {\\n    if (!ready || isConnecting || !window.ethereum?._state?.accounts?.length) {\\n      return;\\n    }\\n \\n    const autoConnect = async () =&gt; {\\n      try {\\n        setIsConnecting(true);\\n        setError(null);\\n \\n        const address = window.ethereum._state.accounts[0];\\n        const connected = await connectWallet(address);\\n \\n        if (!connected) {\\n          console.log(&#x27;No matching wallet found for address:&#x27;, address);\\n        }\\n      } catch (err) {\\n        console.error(&#x27;Auto-connect error:&#x27;, err);\\n        setError(err);\\n      } finally {\\n        setIsConnecting(false);\\n      }\\n    };\\n \\n    autoConnect();\\n  }, [ready, wallets, isConnecting, connectWallet]);\\n \\n  return { isConnecting, error };\\n}\\n \\n/**\\n * Component that handles auto-connection of Intersend wallet\\n * Usage: Just include this component in your app&#x27;s provider wrapper\\n * &lt;AutoConnectHandler /&gt;\\n */\\nexport function AutoConnectHandler() {\\n  const { isConnecting, error } = useIntersendAutoConnect();\\n \\n  useEffect(() =&gt; {\\n    if (error) {\\n      console.error(&#x27;Auto-connect error:&#x27;, error);\\n      // You can add additional error handling here like showing a toast notification\\n      // toast.error(&#x27;Failed to auto-connect wallet&#x27;);\\n    }\\n  }, [error]);\\n \\n  // Component doesn&#x27;t render anything\\n  return null;\\n}\\n \\n// Export both the hook and the component\\nexport { useIntersendAutoConnect };\\n \\n// Default export is the component for easier imports\\nexport default AutoConnectHandler;\\n\",\"title\":\"useIntersendAutoConnect.js\",\"titles\":[\"Privy Integration\",\"Integration Steps\",\"1. Add Required Files\"]},{\"href\":\"/apps/privy#2-configure-providers\",\"html\":\"\\n<p>Import and set up the connector and auto-connect handler in your app&#x27;s provider configuration:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./intersend-connector&#x27;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { AutoConnectHandler } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./hooks/useIntersendAutoConnect&#x27;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> default</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> Providers</span><span style=\\\"color:#24292E;--shiki-dark:#F69D50\\\">({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">children</span><span style=\\\"color:#24292E;--shiki-dark:#F69D50\\\"> }) </span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    &lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">PrivyProvider</span><span style=\\\"color:#6F42C1;--shiki-dark:#6CB6FF\\\"> appId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">privyAppId</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#6F42C1;--shiki-dark:#6CB6FF\\\"> config</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">...</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      &lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">WagmiProvider</span><span style=\\\"color:#6F42C1;--shiki-dark:#6CB6FF\\\"> config</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wagmiConfig</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">        {</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* AutoConnectHandler manages wallet connection when app is loaded in Intersend */</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        &lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">AutoConnectHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> /&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">        {</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">children</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      &lt;/</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">WagmiProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    &lt;/</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">PrivyProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/apps/privy.mdx#2-configure-providers\",\"isPage\":false,\"text\":\"\\nImport and set up the connector and auto-connect handler in your app&#x27;s provider configuration:\\nimport &#x27;./intersend-connector&#x27;\\nimport { AutoConnectHandler } from &#x27;./hooks/useIntersendAutoConnect&#x27;\\n \\nexport default function Providers({ children }) {\\n  return (\\n    &lt;PrivyProvider appId={privyAppId} config={...}&gt;\\n      &lt;WagmiProvider config={wagmiConfig}&gt;\\n        {/* AutoConnectHandler manages wallet connection when app is loaded in Intersend */}\\n        &lt;AutoConnectHandler /&gt;\\n        {children}\\n      &lt;/WagmiProvider&gt;\\n    &lt;/PrivyProvider&gt;\\n  );\\n}\\n\",\"title\":\"2. Configure Providers\",\"titles\":[\"Privy Integration\",\"Integration Steps\"]},{\"href\":\"/apps/privy#3-whitelist-intersend-domain\",\"html\":\"\\n<p>Add Intersend domains to your Privy dashboard&#x27;s allowed origins:</p>\\n<ul>\\n<li><a href=\\\"https://app.intersend.io\\\">https://app.intersend.io</a></li>\\n<li><a href=\\\"https://intersend.io\\\">https://intersend.io</a></li>\\n</ul>\\n<p><a href=\\\"https://docs.privy.io/guide/react/configuration/allowed-domains\\\">Configure Allowed Origins →</a></p>\\n\",\"id\":\"docs/pages/apps/privy.mdx#3-whitelist-intersend-domain\",\"isPage\":false,\"text\":\"\\nAdd Intersend domains to your Privy dashboard&#x27;s allowed origins:\\n\\nhttps://app.intersend.io\\nhttps://intersend.io\\n\\nConfigure Allowed Origins →\\n\",\"title\":\"3. Whitelist Intersend Domain\",\"titles\":[\"Privy Integration\",\"Integration Steps\"]},{\"href\":\"/apps/privy#4-verify-app-behavior-inside-intersend\",\"html\":\"\\n<ol>\\n<li><strong>Open <a href=\\\"https://app.intersend.io/apps/sandbox\\\">Sandbox</a></strong> and paste your web app&#x27;s URL into the address bar of the Intersend browser.</li>\\n<li><strong>Auto-connect</strong> should kick in; Intersend will inject the user&#x27;s wallet data into your app.</li>\\n<li><strong>Test transaction or signing flows</strong> to confirm everything relays properly.</li>\\n</ol>\\n\",\"id\":\"docs/pages/apps/privy.mdx#4-verify-app-behavior-inside-intersend\",\"isPage\":false,\"text\":\"\\n\\nOpen Sandbox and paste your web app&#x27;s URL into the address bar of the Intersend browser.\\nAuto-connect should kick in; Intersend will inject the user&#x27;s wallet data into your app.\\nTest transaction or signing flows to confirm everything relays properly.\\n\\n\",\"title\":\"4. Verify App Behavior Inside Intersend\",\"titles\":[\"Privy Integration\",\"Integration Steps\"]},{\"href\":\"/apps/privy#5-get-listed\",\"html\":\"\\n<p>Once integrated submit your app for review:</p>\\n<ul>\\n<li>Email: <a href=\\\"mailto:hello@intersend.io\\\">hello@intersend.io</a></li>\\n<li>Telegram: @erturkarda</li>\\n</ul>\\n\",\"id\":\"docs/pages/apps/privy.mdx#5-get-listed\",\"isPage\":false,\"text\":\"\\nOnce integrated submit your app for review:\\n\\nEmail: hello@intersend.io\\nTelegram: @erturkarda\\n\\n\",\"title\":\"5. Get Listed\",\"titles\":[\"Privy Integration\",\"Integration Steps\"]},{\"href\":\"/apps/privy#need-help\",\"html\":\"\\n<ul>\\n<li><a href=\\\"mailto:hello@intersend.io\\\">Contact Intersend Support</a></li>\\n</ul>\",\"id\":\"docs/pages/apps/privy.mdx#need-help\",\"isPage\":false,\"text\":\"\\n\\nContact Intersend Support\\n\",\"title\":\"Need Help?\",\"titles\":[\"Privy Integration\"]}]}}"
