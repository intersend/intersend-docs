"{\"value\":{\"mdx\":\"---\\ntitle: 'Quickstart'\\ndescription: 'Get started with Intersend integration for wallets'\\nlayout: docs\\nshowSidebar: true\\n---\\n\\n# WaaS Quickstart Guide\\n\\n> **Tip:** See our [complete wallet implementation on Github](https://github.com/intersend/demo-wallet) for a production-ready example of integrating Intersend apps into a wallet.\\n\\n## 1. Install the SDK\\n```bash\\nnpm install universal-portability\\n```\\n\\n## 2. Set Up Provider\\nWrap your application with the UniversalPortabilityProvider:\\n\\n```javascript\\nimport { UniversalPortabilityProvider } from 'universal-portability';\\n\\nfunction App() {\\n  return (\\n    <WagmiProvider config={wagmiConfig}>\\n      <UniversalPortabilityProvider>\\n        {/* Your app */}\\n      </UniversalPortabilityProvider>\\n    </WagmiProvider>\\n  );\\n}\\n```\\n\\n## 3. Implement Message Handlers\\n\\nYour wallet needs to listen for events from Intersendâ€”such as requests to connect, sign a message, or approve a transaction.\\n\\nCreate these two hooks to handle communication between your wallet and embedded dApps:\\n\\n### src/hooks/useMessageHandler.ts\\n\\n```typescript\\nimport { useEffect } from 'react';\\nimport { useUniversalPortability } from 'universal-portability';\\nimport { sendTransaction, signMessage } from '@wagmi/core';\\nimport { config } from '../wagmi';\\nimport { hexToString } from 'viem';\\n\\nexport interface MessageHandlerConfig {\\n  walletAddress: string;\\n  chainId: number;\\n}\\n\\nexport function useMessageHandler({ walletAddress, chainId }: MessageHandlerConfig) {\\n  const { sendMessageToIFrame } = useUniversalPortability();\\n\\n  useEffect(() => {\\n    const handleMessage = async (event: MessageEvent) => {\\n      const { type, payload, requestId } = event.data;\\n\\n      try {\\n        switch (type) {\\n          case 'INTERSEND_CONNECT_REQUEST':\\n            sendMessageToIFrame(\\n              {\\n                type: 'INTERSEND_CONNECT_RESPONSE',\\n                payload: {\\n                  address: walletAddress,\\n                  chainId,\\n                  isConnected: true\\n                }\\n              }\\n            );\\n            break;\\n\\n          case 'SIGN_MESSAGE_REQUEST':\\n            // Handle message signing\\n            break;\\n\\n          case 'TRANSACTION_REQUEST':\\n            // Handle transaction requests\\n            break;\\n        }\\n      } catch (error: any) {\\n        // Error handling\\n      }\\n    };\\n\\n    window.addEventListener('message', handleMessage);\\n    return () => window.removeEventListener('message', handleMessage);\\n  }, [walletAddress, chainId, sendMessageToIFrame]);\\n}\\n```\\n\\n### src/hooks/usePortHandler.ts\\n\\n```typescript\\nimport { useAccount, useChainId } from 'wagmi';\\nimport { useMessageHandler } from './useMessageHandler';\\n\\nexport function usePortHandler() {\\n  const { address } = useAccount();\\n  const chainId = useChainId();\\n\\n  useMessageHandler({\\n    walletAddress: address!,\\n    chainId: chainId!\\n  });\\n\\n  return {\\n    isReady: Boolean(address && chainId)\\n  };\\n}\\n```\\n\\n## 4. Create dApp Store Container\\n\\nIntersend can serve as your \\\"dApp store\\\" aggregator. You can display all available apps, letting users pick which to launch. For instance:\\n\\n```typescript\\nimport { Port, usePortableApps } from 'universal-portability';\\n\\nfunction DAppStoreContainer() {\\n  const { apps } = usePortableApps(); // array of dApp metadata\\n\\n  return (\\n    <div className=\\\"dapp-grid\\\">\\n      {apps.map(app => (\\n        <div key={app.id} className=\\\"dapp-card\\\">\\n          <img src={app.logo} alt={app.name} />\\n          <h3>{app.name}</h3>\\n          <button onClick={() => navigateToApp(app)}>\\n            Launch {app.name}\\n          </button>\\n        </div>\\n      ))}\\n    </div>\\n  );\\n}\\n```\\n\\n## 5. Render dApp Interface\\n\\nWhen the user selects a dApp, you embed it:\\n\\n```typescript\\nimport { Port } from 'universal-portability';\\nimport { useAccount, useChainId } from 'wagmi';\\n\\nimport { usePortHandler } from '../hooks/usePortHandler';\\n\\nfunction AppContainer({ app }) {\\n  const rpcURL = process.env.RPC_URL;\\n  const { address } = useAccount();\\n\\n  // enable postMessage communication\\n  usePortHandler();\\n\\n  return (\\n    <Port\\n      src={`https://app.intersend.io/apps/${app.slug}`}\\n      address={address}\\n      rpcUrl={rpcURL}\\n      height=\\\"400px\\\"\\n      width=\\\"800px\\\"\\n    />\\n  );\\n}\\n```\\n\\n## Message Protocol\\n\\nThe SDK uses a secure postMessage protocol with these main events:\\n\\n- `INTERSEND_CONNECT_REQUEST`: Initial wallet connection request\\n- `SIGN_MESSAGE_REQUEST`: Request to sign a message\\n- `TRANSACTION_REQUEST`: Request to send a transaction\\n- `SWITCH_CHAIN_REQUEST`: Request to switch chain\\n- `*_RESPONSE`: Corresponding response events\\n\\nAll sensitive operations (signing, approvals) are handled by your wallet's existing security infrastructure, ensuring a safe and consistent user experience.\\n\\n## Contact Us\\n\\n- Email: hello@intersend.io\\n- Telegram: @erturkarda\\n\",\"document\":[{\"href\":\"/waas/quickstart-waas#waas-quickstart-guide\",\"html\":\"</header>\\n<blockquote>\\n<p><strong>Tip:</strong> See our <a href=\\\"https://github.com/intersend/demo-wallet\\\">complete wallet implementation on Github</a> for a production-ready example of integrating Intersend apps into a wallet.</p>\\n</blockquote>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#waas-quickstart-guide\",\"isPage\":true,\"text\":\"\\n\\nTip: See our complete wallet implementation on Github for a production-ready example of integrating Intersend apps into a wallet.\\n\\n\",\"title\":\"WaaS Quickstart Guide\",\"titles\":[]},{\"href\":\"/waas/quickstart-waas#1-install-the-sdk\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">npm</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> install</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> universal-portability</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#1-install-the-sdk\",\"isPage\":false,\"text\":\"\\nnpm install universal-portability\\n\",\"title\":\"1. Install the SDK\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#2-set-up-provider\",\"html\":\"\\n<p>Wrap your application with the UniversalPortabilityProvider:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { UniversalPortabilityProvider } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;universal-portability&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> App</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    &lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">WagmiProvider</span><span style=\\\"color:#6F42C1;--shiki-dark:#6CB6FF\\\"> config</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">{</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">wagmiConfig</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      &lt;</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">UniversalPortabilityProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">        {</span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">/* Your app */</span><span style=\\\"color:#24292E;--shiki-dark:#F47067\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      &lt;/</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">UniversalPortabilityProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    &lt;/</span><span style=\\\"color:#005CC5;--shiki-dark:#8DDB8C\\\">WagmiProvider</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#2-set-up-provider\",\"isPage\":false,\"text\":\"\\nWrap your application with the UniversalPortabilityProvider:\\nimport { UniversalPortabilityProvider } from &#x27;universal-portability&#x27;;\\n \\nfunction App() {\\n  return (\\n    &lt;WagmiProvider config={wagmiConfig}&gt;\\n      &lt;UniversalPortabilityProvider&gt;\\n        {/* Your app */}\\n      &lt;/UniversalPortabilityProvider&gt;\\n    &lt;/WagmiProvider&gt;\\n  );\\n}\\n\",\"title\":\"2. Set Up Provider\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#3-implement-message-handlers\",\"html\":\"\\n<p>Your wallet needs to listen for events from Intersendâ€”such as requests to connect, sign a message, or approve a transaction.</p>\\n<p>Create these two hooks to handle communication between your wallet and embedded dApps:</p>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#3-implement-message-handlers\",\"isPage\":false,\"text\":\"\\nYour wallet needs to listen for events from Intersendâ€”such as requests to connect, sign a message, or approve a transaction.\\nCreate these two hooks to handle communication between your wallet and embedded dApps:\\n\",\"title\":\"3. Implement Message Handlers\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#srchooksusemessagehandlerts\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useEffect } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;react&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useUniversalPortability } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;universal-portability&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { sendTransaction, signMessage } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;@wagmi/core&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { config } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;../wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { hexToString } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;viem&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> interface</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> MessageHandlerConfig</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  walletAddress</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> string</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">  chainId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> number</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">walletAddress</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">chainId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> MessageHandlerConfig</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">sendMessageToIFrame</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useUniversalPortability</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  useEffect</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(() </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    const</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> handleMessage</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> async</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">event</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\"> MessageEvent</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">type</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">payload</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">requestId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> event.data;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">      try</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        switch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (type) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;INTERSEND_CONNECT_REQUEST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">            sendMessageToIFrame</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                type: </span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;INTERSEND_CONNECT_RESPONSE&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                payload: {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                  address: walletAddress,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                  chainId,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                  isConnected: </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">true</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">                }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">              }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;SIGN_MESSAGE_REQUEST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            // Handle message signing</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          case</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;TRANSACTION_REQUEST&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">:</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">            // Handle transaction requests</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">            break</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">        }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">catch</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">error</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">:</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> any</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">        // Error handling</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      }</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    };</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">addEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;message&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, handleMessage);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> () </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> window.</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">removeEventListener</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&#x27;message&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">, handleMessage);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  }, [walletAddress, chainId, sendMessageToIFrame]);</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#srchooksusemessagehandlerts\",\"isPage\":false,\"text\":\"\\nimport { useEffect } from &#x27;react&#x27;;\\nimport { useUniversalPortability } from &#x27;universal-portability&#x27;;\\nimport { sendTransaction, signMessage } from &#x27;@wagmi/core&#x27;;\\nimport { config } from &#x27;../wagmi&#x27;;\\nimport { hexToString } from &#x27;viem&#x27;;\\n \\nexport interface MessageHandlerConfig {\\n  walletAddress: string;\\n  chainId: number;\\n}\\n \\nexport function useMessageHandler({ walletAddress, chainId }: MessageHandlerConfig) {\\n  const { sendMessageToIFrame } = useUniversalPortability();\\n \\n  useEffect(() =&gt; {\\n    const handleMessage = async (event: MessageEvent) =&gt; {\\n      const { type, payload, requestId } = event.data;\\n \\n      try {\\n        switch (type) {\\n          case &#x27;INTERSEND_CONNECT_REQUEST&#x27;:\\n            sendMessageToIFrame(\\n              {\\n                type: &#x27;INTERSEND_CONNECT_RESPONSE&#x27;,\\n                payload: {\\n                  address: walletAddress,\\n                  chainId,\\n                  isConnected: true\\n                }\\n              }\\n            );\\n            break;\\n \\n          case &#x27;SIGN_MESSAGE_REQUEST&#x27;:\\n            // Handle message signing\\n            break;\\n \\n          case &#x27;TRANSACTION_REQUEST&#x27;:\\n            // Handle transaction requests\\n            break;\\n        }\\n      } catch (error: any) {\\n        // Error handling\\n      }\\n    };\\n \\n    window.addEventListener(&#x27;message&#x27;, handleMessage);\\n    return () =&gt; window.removeEventListener(&#x27;message&#x27;, handleMessage);\\n  }, [walletAddress, chainId, sendMessageToIFrame]);\\n}\\n\",\"title\":\"src/hooks/useMessageHandler.ts\",\"titles\":[\"WaaS Quickstart Guide\",\"3. Implement Message Handlers\"]},{\"href\":\"/waas/quickstart-waas#srchooksuseporthandlerts\",\"html\":\"\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useAccount, useChainId } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useMessageHandler } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;./useMessageHandler&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">export</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> usePortHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> chainId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useChainId</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  useMessageHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    walletAddress: address</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">,</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    chainId: chainId</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">!</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  });</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">    isReady: </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">Boolean</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(address </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&amp;&amp;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> chainId)</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  };</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#srchooksuseporthandlerts\",\"isPage\":false,\"text\":\"\\nimport { useAccount, useChainId } from &#x27;wagmi&#x27;;\\nimport { useMessageHandler } from &#x27;./useMessageHandler&#x27;;\\n \\nexport function usePortHandler() {\\n  const { address } = useAccount();\\n  const chainId = useChainId();\\n \\n  useMessageHandler({\\n    walletAddress: address!,\\n    chainId: chainId!\\n  });\\n \\n  return {\\n    isReady: Boolean(address &amp;&amp; chainId)\\n  };\\n}\\n\",\"title\":\"src/hooks/usePortHandler.ts\",\"titles\":[\"WaaS Quickstart Guide\",\"3. Implement Message Handlers\"]},{\"href\":\"/waas/quickstart-waas#4-create-dapp-store-container\",\"html\":\"\\n<p>Intersend can serve as your &quot;dApp store&quot; aggregator. You can display all available apps, letting users pick which to launch. For instance:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { Port, usePortableApps } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;universal-portability&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> DAppStoreContainer</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">() {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">apps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> usePortableApps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(); </span><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">// array of dApp metadata</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    &lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">div className</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;dapp-grid&quot;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      {</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">apps</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">map</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">app</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =&gt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        &lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">div key</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{app.id} className</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;dapp-card&quot;</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          &lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">img src</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{app.logo} alt</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{app.name} </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">/&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">          &lt;</span><span style=\\\"color:#6F42C1;--shiki-dark:#F69D50\\\">h3</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">&gt;{app.name}</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&lt;/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">h3</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          &lt;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">button onClick</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{() =&gt; </span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">navigateToApp</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">(</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">app</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">)}</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">            Launch {</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">app</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">.</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">name</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">          &lt;/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">button</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">        &lt;/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">div</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      ))}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    &lt;/</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">div</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#4-create-dapp-store-container\",\"isPage\":false,\"text\":\"\\nIntersend can serve as your &quot;dApp store&quot; aggregator. You can display all available apps, letting users pick which to launch. For instance:\\nimport { Port, usePortableApps } from &#x27;universal-portability&#x27;;\\n \\nfunction DAppStoreContainer() {\\n  const { apps } = usePortableApps(); // array of dApp metadata\\n \\n  return (\\n    &lt;div className=&quot;dapp-grid&quot;&gt;\\n      {apps.map(app =&gt; (\\n        &lt;div key={app.id} className=&quot;dapp-card&quot;&gt;\\n          &lt;img src={app.logo} alt={app.name} /&gt;\\n          &lt;h3&gt;{app.name}&lt;/h3&gt;\\n          &lt;button onClick={() =&gt; navigateToApp(app)}&gt;\\n            Launch {app.name}\\n          &lt;/button&gt;\\n        &lt;/div&gt;\\n      ))}\\n    &lt;/div&gt;\\n  );\\n}\\n\",\"title\":\"4. Create dApp Store Container\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#5-render-dapp-interface\",\"html\":\"\\n<p>When the user selects a dApp, you embed it:</p>\\n<pre class=\\\"shiki shiki-themes github-light github-dark-dimmed\\\" style=\\\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\\\" tabindex=\\\"0\\\"><code><span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { Port } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;universal-portability&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { useAccount, useChainId } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;wagmi&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">import</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { usePortHandler } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">from</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\"> &#x27;../hooks/usePortHandler&#x27;</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">function</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> AppContainer</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">({ </span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">app</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> }) {</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\"> rpcURL</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\"> =</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> process.env.</span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">RPC_URL</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  const</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> { </span><span style=\\\"color:#005CC5;--shiki-dark:#6CB6FF\\\">address</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> } </span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\"> useAccount</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6A737D;--shiki-dark:#768390\\\">  // enable postMessage communication</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#6F42C1;--shiki-dark:#DCBDFB\\\">  usePortHandler</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">();</span></span>\\n<span class=\\\"line\\\" data-empty-line=\\\"true\\\"> </span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">  return</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\"> (</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    &lt;</span><span style=\\\"color:#E36209;--shiki-dark:#F69D50\\\">Port</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      src</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">`https://app.intersend.io/apps/${</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">app</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">.</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">slug</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">}`</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      address</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{address}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      rpcUrl</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">{rpcURL}</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      height</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;400px&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">      width</span><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">=</span><span style=\\\"color:#032F62;--shiki-dark:#96D0FF\\\">&quot;800px&quot;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#D73A49;--shiki-dark:#F47067\\\">    /&gt;</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">  );</span></span>\\n<span class=\\\"line\\\"><span style=\\\"color:#24292E;--shiki-dark:#ADBAC7\\\">}</span></span></code></pre>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#5-render-dapp-interface\",\"isPage\":false,\"text\":\"\\nWhen the user selects a dApp, you embed it:\\nimport { Port } from &#x27;universal-portability&#x27;;\\nimport { useAccount, useChainId } from &#x27;wagmi&#x27;;\\n \\nimport { usePortHandler } from &#x27;../hooks/usePortHandler&#x27;;\\n \\nfunction AppContainer({ app }) {\\n  const rpcURL = process.env.RPC_URL;\\n  const { address } = useAccount();\\n \\n  // enable postMessage communication\\n  usePortHandler();\\n \\n  return (\\n    &lt;Port\\n      src={`https://app.intersend.io/apps/${app.slug}`}\\n      address={address}\\n      rpcUrl={rpcURL}\\n      height=&quot;400px&quot;\\n      width=&quot;800px&quot;\\n    /&gt;\\n  );\\n}\\n\",\"title\":\"5. Render dApp Interface\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#message-protocol\",\"html\":\"\\n<p>The SDK uses a secure postMessage protocol with these main events:</p>\\n<ul>\\n<li><code>INTERSEND_CONNECT_REQUEST</code>: Initial wallet connection request</li>\\n<li><code>SIGN_MESSAGE_REQUEST</code>: Request to sign a message</li>\\n<li><code>TRANSACTION_REQUEST</code>: Request to send a transaction</li>\\n<li><code>SWITCH_CHAIN_REQUEST</code>: Request to switch chain</li>\\n<li><code>*_RESPONSE</code>: Corresponding response events</li>\\n</ul>\\n<p>All sensitive operations (signing, approvals) are handled by your wallet&#x27;s existing security infrastructure, ensuring a safe and consistent user experience.</p>\\n\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#message-protocol\",\"isPage\":false,\"text\":\"\\nThe SDK uses a secure postMessage protocol with these main events:\\n\\nINTERSEND_CONNECT_REQUEST: Initial wallet connection request\\nSIGN_MESSAGE_REQUEST: Request to sign a message\\nTRANSACTION_REQUEST: Request to send a transaction\\nSWITCH_CHAIN_REQUEST: Request to switch chain\\n*_RESPONSE: Corresponding response events\\n\\nAll sensitive operations (signing, approvals) are handled by your wallet&#x27;s existing security infrastructure, ensuring a safe and consistent user experience.\\n\",\"title\":\"Message Protocol\",\"titles\":[\"WaaS Quickstart Guide\"]},{\"href\":\"/waas/quickstart-waas#contact-us\",\"html\":\"\\n<ul>\\n<li>Email: <a href=\\\"mailto:hello@intersend.io\\\">hello@intersend.io</a></li>\\n<li>Telegram: @erturkarda</li>\\n</ul>\",\"id\":\"docs/pages/waas/quickstart-waas.mdx#contact-us\",\"isPage\":false,\"text\":\"\\n\\nEmail: hello@intersend.io\\nTelegram: @erturkarda\\n\",\"title\":\"Contact Us\",\"titles\":[\"WaaS Quickstart Guide\"]}]}}"
